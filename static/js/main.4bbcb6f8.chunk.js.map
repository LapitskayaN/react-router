{"version":3,"sources":["components/navbar/index.js","components/home/index.js","components/card/index.js","components/planet-list/index.js","components/clicked-planet/index.js","components/footer/index.js","App.js","index.js"],"names":["Navbar","class","to","Home","className","src","Card","name","climate","population","diameter","onClick","id","e","initialState","planets","randomMovie","PlanetList","props","useState","state","setState","useEffect","getData","fetch","then","res","json","data","results","getPlanet","planet","find","elem","target","history","push","pathname","map","rotation_period","orbital_period","gravity","terrain","surface_water","residents","ClickedPlanet","useParams","onePlanet","setOnePlanet","getOneItem","item","console","log","Footer","App","exact","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bbcb6f8.chunk.js","sourcesContent":["import {Link} from \"react-router-dom\"\n\nconst Navbar = () => {\n    return (\n        <ul class=\"navbar\">\n            <Link to=\"/\"><li>Home</li></Link>\n            <Link to=\"/list\"><li>List</li></Link>\n            {/* <Link to=\"/planet\"><li>Planet</li></Link>  */}\n            \n        </ul>\n\n    )\n}\n\nexport default Navbar;","\nconst Home = () => {\n    return (\n        <div className=\"home\">   \n            <h3> Application</h3>\n            <p>Information about planets STAR WARS</p>\n            <br></br>\n            <p>\n            <img src=\"https://purepng.com/public/uploads/large/purepng.com-star-warsstar-warsspace-opera-franchisefilm-star-warswarsstar-17015278267449wbcm.png\" />\n            </p>\n        </div>\n     \n    )\n}\n\nexport default Home;","\nconst Card = ({name,  climate, population, diameter, onClick}) => {\n    return (\n        <div className=\"card\" id={name}>\n            <h1>{name}</h1>\n            <p>climate :{climate}</p>\n            <p> diameter : {diameter}</p>\n            <p> population : {population} </p>\n           \n            {/* <img src={posterUrl} alt={name} /> */}\n            <button name={name} onClick={(e) => onClick(e)}>\n                Know more..\n                </button>\n\n        </div>\n\n    )\n}\n\nexport default Card;","import React, {useEffect, useState} from \"react\";\nimport Card from \"../card\"\n\nconst  initialState = {\n    planets: [],\n    randomMovie: {},\n}\n\nconst url = 'https://swapi.dev/api/planets/'\n\nconst PlanetList = (props) => {\n\n    const [state, setState] = useState(initialState);\n    useEffect(() => {\n      getData()\n    }, [])\n\n    const getData = () => {\n        fetch(url)\n        .then(res => res.json())\n        .then((data) => \n        setState({\n            ...state,\n            planets: data.results\n        }))\n    }\n    \n    const getPlanet =(e) =>{\n        const planet = state.planets.find(elem => elem.name == e.target.name);\n        // const clickedPlanet = state.planets.find(elem => elem.name == e.target.name);\n        \n        // setState ({\n        //     ...state,\n        //     randomMovie: planet\n        // })\n\n        props.history.push({\n            pathname: '/list/${planet.name}',\n            // pathname: '/planet',\n            state: {\n                randomMovie: planet,\n                // randomMovie: clickedPlanet\n            },\n        });\n       \n    };\n\n    const renderItems = () => \n        state.planets.map((elem) => (\n        \n        <Card \n            onClick={getPlanet}\n            // key={elem.name} \n            name={elem.name}\n            rotation_period = {elem.rotation_period}  \n            orbital_period = {elem.orbital_period}  \n            diameter = {elem.diameter}  \n            climate= {elem.climate}\n            gravity= {elem.gravity}  \n            terrain= {elem.terrain}  \n            surface_water= {elem.surface_water}  \n            population= {elem.population}  \n            residents= {elem.residents}  \n            \n            // id={elem.name}\n        />\n      \n        ))\n    \n\n    return (\n       <div className=\"cardList\">\n           {\n               state.planets &&  renderItems()\n           }\n\n       </div>     \n    )\n}\n\nexport default PlanetList;","import React, {useEffect, useState} from \"react\";\nimport {BrowserRouter as Router, Link, useParams} from \"react-router-dom\"\n\nconst ClickedPlanet = (props) =>{\n  \n  const {name} = useParams ();\n  const [onePlanet, setOnePlanet] = useState(null);\n  const url = 'https://swapi.dev/api/planets/'\n  \n\n  useEffect(() => {\n    getOneItem();\n  }, []);\n\n  const getOneItem = () => {\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => setOnePlanet(data.results.find((item)=> item.name == name)))      \n  };\n\n  if (!onePlanet) return <span>loading ...</span>;\n\n  console.log(onePlanet)\n\n\n  // ({title,year, director, posterUrl}) => {\n  return (\n        <div className=\"card\" >\n          {!onePlanet ? (\n            <h1>You havent add any movies yet...</h1>\n          ) : (\n            <>\n        \n          <h1>Name: {onePlanet.name}</h1>\n          {/* <p>rotation_period : {props.location.state.randomMovie.rotation_period}</p>\n          <p>orbital_period : {props.location.state.randomMovie.orbital_period}</p> */}\n          <p>climate : {onePlanet.climate}</p>\n          {/* <p>gravity : {props.location.state.randomMovie.gravity}</p>\n          <p>terrain : {props.location.state.randomMovie.terrain}</p>\n          <p>surface_water : {props.location.state.randomMovie.surface_water}</p>\n          <p>population : {props.location.state.randomMovie.population}</p> */}\n\n          {/* <img\n            src={props.location.state.randomMovie.posterUrl}\n            alt={props.location.state.randomMovie.title}\n          />\n          <p>{props.location.state.randomMovie.year}</p>\n          <p>{props.location.state.randomMovie.director}</p>\n          <p></p> */}\n\n          <button>\n            <Link to=\"list\">Go back</Link>\n          </button>          \n          </>\n      )\n      }\n\n            {/* \n            <h1>{props.lacation.state.title}</h1>\n            <p>{year}</p>\n            <p>{director}</p>\n            <img src={posterUrl} alt={title} ></img> */}\n        </div>\n    )\n}\n \nexport default ClickedPlanet;","import {Link} from \"react-router-dom\"\n\nconst Footer = () => {\n    return (\n        <div className=\"footer\">               \n            <p>Wild Code School </p>\n            <p> workshop react route</p>\n            <p> </p>\n        </div>\n\n    )\n}\n\nexport default Footer;","import { Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Navbar from \"./components/navbar\"\nimport Home from \"./components/home\"\nimport PlanetList from \"./components/planet-list\"\nimport ClickedPlanet from \"./components/clicked-planet\"\nimport Footer from \"./components/footer\"\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        \n        <img src=\"https://cdn.commonwealthclub.org/s3fs-public/styles/hero/public/2019-11/hero%20star%20wars.png?itok=waMDC-JL\" ></img> \n        <h1>PLANETS</h1>  \n   \n        <Navbar />\n        <Switch> \n          <Route exact path=\"/\" render={(props)=> <Home {...props}/>} />\n          <Route exact path=\"/list/:name\" render={(props)=> <ClickedPlanet {...props}/>} />\n          <Route exact path=\"/list\" render={(props)=> <PlanetList {...props}/>} />\n           {/* <Route exact path=\"/planet\" render={(props)=> <ClickedPlanet {...props}/>} />  */}\n        </Switch>\n        \n      </header>\n      <div className=\"footer\">\n        <Footer />\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}